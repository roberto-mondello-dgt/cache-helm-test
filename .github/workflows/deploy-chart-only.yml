name: Deploy - Solo Chart

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run apply against'
        required: true
        type: string
      timeout_seconds:
        description: 'Timeout in seconds'
        required: true
        type: number

defaults:
  run:
    shell: bash
    working-directory: ./interop-core-deployment

jobs:
  chart_cache_and_dummy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: roberto-mondello-dgt/cache-helm-test
          # fetch-depth: 0

      - name: Check Chart Hash
        id: check-chart
        run: |
          if [ -f "Chart.yaml" ]; then
            chart_hash=$(sha256sum Chart.yaml | awk '{print $1}')
          else
            chart_hash="none"
          fi
          echo "chart_hash=$chart_hash" >> "$GITHUB_OUTPUT"

      - name: Prepare Cache Directory
        run: mkdir -p /tmp/cache

      - name: Restore Cache
        uses: actions/cache@v3
        id: cache-restore
        with:
          path: /tmp/cache
          key: cache-${{ inputs.environment }}-chart-${{ steps.check-chart.outputs.chart_hash }}

      - name: Build and Cache Helm Chart
        if: steps.cache-restore.outputs.cache-hit != 'true' && steps.check-chart.outputs.chart_hash != 'none'
        run: |
            echo "::info::Chart.yaml has changed. Building Helm chart."

            mkdir -p /tmp/real-chart
            cd /tmp/real-chart

            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm repo update

            CHART_NAME="nginx"
            CHART_VERSION="15.14.0"

            helm pull bitnami/$CHART_NAME --version $CHART_VERSION --untar
            helm package $CHART_NAME -d /tmp/cache

            echo "::info::Helm chart packaged and stored in cache."

      - name: Save Cache
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: /tmp/cache
          key: cache-${{ inputs.environment }}-chart-${{ steps.check-chart.outputs.chart_hash }}
