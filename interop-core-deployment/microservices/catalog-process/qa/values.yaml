name: "interop-be-catalog-process"
techStack: "nodejs"

service:
  create: true
  containerPort: 8088
 
serviceAccount:
  roleArn: "arn:aws:iam::755649575658:role/interop-be-catalog-process-qa-es1"

configmap:
  EVENTSTORE_DB_SCHEMA: "{{.Values.namespace}}_catalog"
  ESERVICE_DOCUMENTS_PATH: "eservices/docs"
  S3_BUCKET: "interop-application-documents-{{.Values.namespace}}-es1"
  PRODUCER_ALLOWED_ORIGINS: "IPA"
  ACCEPTED_AUDIENCES: "{{.Values.namespace}}.interop.pagopa.it/ui,{{.Values.namespace}}.interop.pagopa.it/m2m,{{.Values.namespace}}.interop.pagopa.it/internal"
  ESERVICE_TEMPLATE_DOCUMENTS_CONTAINER: "interop-application-documents-{{.Values.namespace}}-es1"
  ESERVICE_TEMPLATE_DOCUMENTS_PATH: "eservice-template/docs"
  FEATURE_FLAG_SQL: "false"
  FEATURE_FLAG_AGREEMENT_APPROVAL_POLICY_UPDATE: "true"

deployment:
  flywayInitContainer: 
    create: true
    migrationsConfigmap: "event-store-migrations"
    env:
      FLYWAY_CREATE_SCHEMAS: "true"
      FLYWAY_PLACEHOLDER_REPLACEMENT: "true"
      FLYWAY_URL: jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)
    envFromConfigmaps:
      FLYWAY_SCHEMAS: "{{.Values.name}}.EVENTSTORE_DB_SCHEMA"
      FLYWAY_PLACEHOLDERS_APPLICATIONSCHEMA: "{{.Values.name}}.EVENTSTORE_DB_SCHEMA"
      POSTGRES_HOST: "common-event-store.EVENTSTORE_DB_HOST"
      POSTGRES_PORT: "common-event-store.EVENTSTORE_DB_PORT"
      POSTGRES_DB: "common-event-store.EVENTSTORE_DB_NAME"
    envFromSecrets:
      FLYWAY_USER: "event-store.POSTGRES_USR"
      FLYWAY_PASSWORD: "event-store.POSTGRES_PSW"
  env:
    PORT: "8088"
    HOST: "0.0.0.0"
    EVENTSTORE_DB_USE_SSL: "true"
    SERVICE_VERSION: "{{.Values.deployment.image.tag}}"
  envFromFieldRef:
    POD_NAME: "metadata.name"
    NODE_IP: "status.hostIP"
    AWS_ROLE_SESSION_NAME: "metadata.name"
    PRODUCER_KAFKA_CLIENT_ID: "metadata.name"
  envFromConfigmaps:
    WELL_KNOWN_URLS: "common-jwt.WELL_KNOWN_URLS"
    EVENTSTORE_DB_HOST: "common-event-store.EVENTSTORE_DB_HOST"
    EVENTSTORE_DB_NAME: "common-event-store.EVENTSTORE_DB_NAME"
    EVENTSTORE_DB_PORT: "common-event-store.EVENTSTORE_DB_PORT"
    READMODEL_DB_HOST: "common-read-model.READMODEL_DB_HOST"
    READMODEL_DB_NAME: "common-read-model.READMODEL_DB_NAME"
    READMODEL_DB_PORT: "common-read-model.READMODEL_DB_PORT"
    APPLICATION_AUDIT_TOPIC: "common-kafka.APPLICATION_AUDIT_TOPIC"
    PRODUCER_KAFKA_BROKERS: "common-kafka.KAFKA_BROKERS"
    READMODEL_SQL_DB_HOST: "common-read-model-sql.DB_HOST_RO"
    READMODEL_SQL_DB_PORT: "common-read-model-sql.DB_PORT"
    READMODEL_SQL_DB_NAME: "common-read-model-sql.DB_NAME"
    READMODEL_SQL_DB_USE_SSL: "common-read-model-sql.DB_USE_SSL"
    READMODEL_SQL_DB_SCHEMA_AGREEMENT: "common-read-model-sql.DB_SCHEMA_AGREEMENT"
    READMODEL_SQL_DB_SCHEMA_ATTRIBUTE: "common-read-model-sql.DB_SCHEMA_ATTRIBUTE"
    READMODEL_SQL_DB_SCHEMA_CATALOG: "common-read-model-sql.DB_SCHEMA_CATALOG"
    READMODEL_SQL_DB_SCHEMA_CLIENT_JWK_KEY: "common-read-model-sql.DB_SCHEMA_CLIENT_JWK_KEY"
    READMODEL_SQL_DB_SCHEMA_CLIENT: "common-read-model-sql.DB_SCHEMA_CLIENT"
    READMODEL_SQL_DB_SCHEMA_DELEGATION: "common-read-model-sql.DB_SCHEMA_DELEGATION"
    READMODEL_SQL_DB_SCHEMA_ESERVICE_TEMPLATE: "common-read-model-sql.DB_SCHEMA_ESERVICE_TEMPLATE"
    READMODEL_SQL_DB_SCHEMA_PRODUCER_JWK_KEY: "common-read-model-sql.DB_SCHEMA_PRODUCER_JWK_KEY"
    READMODEL_SQL_DB_SCHEMA_PRODUCER_KEYCHAIN: "common-read-model-sql.DB_SCHEMA_PRODUCER_KEYCHAIN"
    READMODEL_SQL_DB_SCHEMA_PURPOSE: "common-read-model-sql.DB_SCHEMA_PURPOSE"
    READMODEL_SQL_DB_SCHEMA_TENANT: "common-read-model-sql.DB_SCHEMA_TENANT"
  envFromSecrets:
    EVENTSTORE_DB_USERNAME: "event-store.POSTGRES_USR"
    EVENTSTORE_DB_PASSWORD: "event-store.POSTGRES_PSW"
    READMODEL_DB_USERNAME: "read-model.READONLY_USR"
    READMODEL_DB_PASSWORD: "read-model.READONLY_PSW"
    READMODEL_SQL_DB_USERNAME: "platform-data-catalog-process-user.username"
    READMODEL_SQL_DB_PASSWORD: "platform-data-catalog-process-user.password"    
  livenessProbe:
    httpGet:
      path: /status
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
  readinessProbe:
    httpGet:
      path: /status
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
