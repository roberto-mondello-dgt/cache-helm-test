apiVersion: v1
kind: ConfigMap
metadata:
  name: flyway-read-model-catalog
  namespace: dev
data:
  V1__Init_Catalog.sql: |-
    CREATE SCHEMA IF NOT EXISTS "${NAMESPACE}_catalog";

    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to
      "${NAMESPACE}_catalog_rmw_user",
      "${NAMESPACE}_catalog_process_user",
      readonly_user;

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice (
      id UUID,
      metadata_version INTEGER NOT NULL,
      producer_id UUID NOT NULL,
      name VARCHAR NOT NULL,
      description VARCHAR NOT NULL,
      technology VARCHAR NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE NOT NULL,
      mode VARCHAR NOT NULL,
      is_signal_hub_enabled BOOLEAN,
      is_consumer_delegable BOOLEAN,
      is_client_access_delegable BOOLEAN,
      template_id UUID,
      PRIMARY KEY (id),
      CONSTRAINT eservice_id_metadata_version_unique UNIQUE (id, metadata_version)
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_descriptor (
      id UUID,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      version VARCHAR NOT NULL,
      description VARCHAR,
      state VARCHAR NOT NULL,
      audience VARCHAR ARRAY NOT NULL,
      voucher_lifespan INTEGER NOT NULL,
      daily_calls_per_consumer INTEGER NOT NULL,
      daily_calls_total INTEGER NOT NULL,
      agreement_approval_policy VARCHAR,
      created_at TIMESTAMP WITH TIME ZONE NOT NULL,
      server_urls VARCHAR ARRAY NOT NULL,
      published_at TIMESTAMP WITH TIME ZONE,
      suspended_at TIMESTAMP WITH TIME ZONE,
      deprecated_at TIMESTAMP WITH TIME ZONE,
      archived_at TIMESTAMP WITH TIME ZONE,
      PRIMARY KEY (id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_descriptor TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_descriptor_template_version_ref (
      eservice_template_version_id UUID NOT NULL,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      descriptor_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice_descriptor (id) ON DELETE CASCADE,
      contact_name VARCHAR,
      contact_email VARCHAR,
      contact_url VARCHAR,
      terms_and_conditions_url VARCHAR,
      PRIMARY KEY (eservice_template_version_id, descriptor_id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_template_version_ref TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_template_version_ref TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_template_version_ref TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_descriptor_rejection_reason (
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      descriptor_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice_descriptor (id) ON DELETE CASCADE,
      rejection_reason VARCHAR NOT NULL,
      rejected_at TIMESTAMP WITH TIME ZONE NOT NULL,
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_rejection_reason TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_rejection_reason TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_rejection_reason TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_descriptor_interface (
      id UUID,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      descriptor_id UUID UNIQUE NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice_descriptor (id) ON DELETE CASCADE,
      name VARCHAR NOT NULL,
      content_type VARCHAR NOT NULL,
      pretty_name VARCHAR NOT NULL,
      path VARCHAR NOT NULL,
      checksum VARCHAR NOT NULL,
      upload_date TIMESTAMP WITH TIME ZONE NOT NULL,
      PRIMARY KEY (id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_interface TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_interface TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_interface TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_descriptor_document (
      id UUID,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      descriptor_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice_descriptor (id) ON DELETE CASCADE,
      name VARCHAR NOT NULL,
      content_type VARCHAR NOT NULL,
      pretty_name VARCHAR NOT NULL,
      path VARCHAR NOT NULL,
      checksum VARCHAR NOT NULL,
      upload_date TIMESTAMP WITH TIME ZONE NOT NULL,
      PRIMARY KEY (id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_document TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_document TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_document TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_descriptor_attribute (
      attribute_id UUID NOT NULL,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      descriptor_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice_descriptor (id) ON DELETE CASCADE,
      explicit_attribute_verification BOOLEAN NOT NULL,
      kind VARCHAR NOT NULL,
      group_id INTEGER NOT NULL,
      PRIMARY KEY (attribute_id, descriptor_id, group_id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_attribute TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_attribute TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_descriptor_attribute TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_risk_analysis (
      id UUID,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      name VARCHAR NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE NOT NULL,
      risk_analysis_form_id UUID NOT NULL,
      risk_analysis_form_version VARCHAR NOT NULL,
      PRIMARY KEY (id, eservice_id),
      UNIQUE (risk_analysis_form_id, eservice_id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_risk_analysis TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_risk_analysis TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_risk_analysis TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_catalog".eservice_risk_analysis_answer (
      id UUID,
      eservice_id UUID NOT NULL REFERENCES "${NAMESPACE}_catalog".eservice (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      risk_analysis_form_id UUID NOT NULL,
      kind VARCHAR NOT NULL,
      key VARCHAR NOT NULL,
      value VARCHAR ARRAY NOT NULL,
      PRIMARY KEY (id, eservice_id),
      FOREIGN KEY (eservice_id, metadata_version) REFERENCES "${NAMESPACE}_catalog".eservice (id, metadata_version) DEFERRABLE INITIALLY DEFERRED,
      FOREIGN KEY (risk_analysis_form_id, eservice_id) REFERENCES "${NAMESPACE}_catalog".eservice_risk_analysis (risk_analysis_form_id, eservice_id) ON DELETE CASCADE
    );   
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_catalog".eservice_risk_analysis_answer TO "${NAMESPACE}_catalog_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_risk_analysis_answer TO "${NAMESPACE}_catalog_process_user";    
    GRANT SELECT ON TABLE "${NAMESPACE}_catalog".eservice_risk_analysis_answer TO readonly_user; 

  V1.1__Permission_Process_Catalog.sql: |-
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_catalog" TO "${NAMESPACE}_agreement_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_catalog" TO "${NAMESPACE}_authorization_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_catalog" TO "${NAMESPACE}_delegation_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_catalog" TO "${NAMESPACE}_eservice_template_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_catalog" TO "${NAMESPACE}_purpose_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_catalog" TO "${NAMESPACE}_tenant_process_user";

  V1.2__Grant_Usage_Schema_Catalog.sql: |-
    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to "${NAMESPACE}_agreement_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to "${NAMESPACE}_authorization_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to "${NAMESPACE}_delegation_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to "${NAMESPACE}_eservice_template_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to "${NAMESPACE}_purpose_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_catalog" to "${NAMESPACE}_tenant_process_user";    
