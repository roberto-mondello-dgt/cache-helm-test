apiVersion: v1
kind: ConfigMap
metadata:
  name: flyway-read-model-delegation
  namespace: dev
data:
  V1__Init_Delegation.sql: |-
    CREATE SCHEMA IF NOT EXISTS "${NAMESPACE}_delegation";

    GRANT USAGE ON SCHEMA "${NAMESPACE}_delegation" to
      "${NAMESPACE}_delegation_rmw_user",
      "${NAMESPACE}_delegation_process_user",
      readonly_user;

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_delegation".delegation (
      id UUID,
      metadata_version INTEGER NOT NULL,
      delegator_id UUID NOT NULL,
      delegate_id UUID NOT NULL,
      eservice_id UUID NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE NOT NULL,
      updated_at TIMESTAMP WITH TIME ZONE,
      rejection_reason VARCHAR,
      state VARCHAR NOT NULL,
      kind VARCHAR NOT NULL,
      PRIMARY KEY (id),
      CONSTRAINT delegation_id_metadata_version_unique UNIQUE (id, metadata_version)
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_delegation".delegation TO "${NAMESPACE}_delegation_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_delegation".delegation TO "${NAMESPACE}_delegation_process_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_delegation".delegation TO readonly_user;    

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_delegation".delegation_stamp (
      delegation_id UUID NOT NULL REFERENCES "${NAMESPACE}_delegation".delegation (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      who UUID NOT NULL,
      "when" TIMESTAMP WITH TIME ZONE NOT NULL,
      kind VARCHAR NOT NULL,
      PRIMARY KEY (delegation_id, kind),
      FOREIGN KEY (delegation_id, metadata_version) REFERENCES "${NAMESPACE}_delegation".delegation (id, metadata_version) DEFERRABLE INITIALLY DEFERRED
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_delegation".delegation_stamp TO "${NAMESPACE}_delegation_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_delegation".delegation_stamp TO "${NAMESPACE}_delegation_process_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_delegation".delegation_stamp TO readonly_user;     

    CREATE TABLE IF NOT EXISTS "${NAMESPACE}_delegation".delegation_contract_document (
      id UUID,
      delegation_id UUID NOT NULL REFERENCES "${NAMESPACE}_delegation".delegation (id) ON DELETE CASCADE,
      metadata_version INTEGER NOT NULL,
      name VARCHAR NOT NULL,
      content_type VARCHAR NOT NULL,
      pretty_name VARCHAR NOT NULL,
      path VARCHAR NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE NOT NULL,
      kind VARCHAR NOT NULL,
      PRIMARY KEY (id),
      FOREIGN KEY (delegation_id, metadata_version) REFERENCES "${NAMESPACE}_delegation".delegation (id, metadata_version) DEFERRABLE INITIALLY DEFERRED,
      CONSTRAINT delegation_contract_document_delegation_id_kind_unique UNIQUE (delegation_id, kind)
    );
    GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE "${NAMESPACE}_delegation".delegation_contract_document TO "${NAMESPACE}_delegation_rmw_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_delegation".delegation_contract_document TO "${NAMESPACE}_delegation_process_user";
    GRANT SELECT ON TABLE "${NAMESPACE}_delegation".delegation_contract_document TO readonly_user;     

  V1.1__Permission_Process_Delegation.sql: |-
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_delegation" TO "${NAMESPACE}_agreement_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_delegation" TO "${NAMESPACE}_catalog_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_delegation" TO "${NAMESPACE}_authorization_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_delegation" TO "${NAMESPACE}_purpose_process_user";
    GRANT SELECT ON ALL TABLES IN SCHEMA "${NAMESPACE}_delegation" TO "${NAMESPACE}_tenant_process_user";

  V1.2__Grant_Usage_Schema_Delegation.sql: |-
    GRANT USAGE ON SCHEMA "${NAMESPACE}_delegation" to "${NAMESPACE}_agreement_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_delegation" to "${NAMESPACE}_catalog_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_delegation" to "${NAMESPACE}_authorization_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_delegation" to "${NAMESPACE}_purpose_process_user";    
    GRANT USAGE ON SCHEMA "${NAMESPACE}_delegation" to "${NAMESPACE}_tenant_process_user";    
